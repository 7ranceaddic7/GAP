//SSI 1 First Flight

CONTRACT_TYPE
{
//Contract Descriptions
	name = SSI-0
	title = A Visit from Shuttle Craft Systems Inc.
	group = SSI Aerospace
	agent = SSI Aerospace
	description = Hello! My name is Inigma Kerman, and I am the founder of SSI Aerospace, an engineering cooperative based at the KSC research center. Tesla Electrics, Ford Carriage Co., and the Wright Bicycle Company are our current member organizations. We would like to extend an offer to your organization the opportunity to partner with us with us to advance the development of aerospace assets for use by the Kerbal Space Program at KSC.\n\nWe have already developed a number of technologies that we'd need some help testing. These technologies, we believe, will revolutionize Kerbal society everywhere, therefore joining our cooperative will require a steep initial investment on your part, although we expect that the return on it will far outweigh anything you could have done alone.\n\nWe have developed a few structural parts, a working command seat, a working battery, and even a small powered wheel - which are the means to produce the bikes and cars you've seen buzzing around the place! We are looking for a new infusion of cash though to advance a secret project we've been working on.\n\nWhat project you ask? Oh, well, we can't give many details until you sign on, but we are working on developing more than just bicycles, electric automobiles, and even watercraft at the moment. As a side note, we've also developed a mechanism to detach parts from other parts, as we figure it will be most useful in detaching your contraptions from any manned craft you arrive to the runway in.
	synopsis = Joining an engineering cooperative can be a very lucrative way to beat out the fledgling solo competitors around KSC for land, sea, air, and space exploration contracts that are rolling into Gene Kerman's hands at Mission Control.
	notes = SSI needs your monetary investment. You get our technology. It's a good deal overall.
	completedMessage = Thanks for joining the SSI Aerospace cooperative. Enjoy the new toys. We hope for a bright and propserous future together! Head back to Mission Control for another SSI contract.
	
//Contract Limits
	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0
	cancellable = true
	declinable = true
	autoAccept = false
	prestige = Trivial
   	targetBody = Kerbin
   	maxCompletions = 1
   	maxSimultaneous = 1

//Contract Rewards
 	rewardScience = 5.0
  	rewardReputation = 5.0
  	rewardFunds = 8000.0
 	failureReputation = 5.0
  	failureFunds = 10000.0
  	advanceFunds = 2000
	weight = 10.0
	


//Behaviors to do when creating contract
	BEHAVIOUR
	{
		name = ExperimentalPart
		type = ExperimentalPart
		
		part = strutCube
		part = seatExternalCmd
		part = batteryPack
		part = roverWheel2
		part = stackDecouplerMini
		
		unlockCriteria = CONTRACT_ACCEPTANCE
		lockCriteria = DO_NOT_LOCK
	}
	
	
//Parameters for Contract Completion
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		define = Your prototype
		title = New craft prototype with test parts and a willing volunteer
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Must be a brand new craft
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			hideChildren = true
			minCrew = 1
			maxCrew = 1
			title = Must be piloted by a Kerbal
		}
	}

	
//Recovery Parameters - Landing Zone
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		vessel = Your prototype
	
	PARAMETER
		{
			name = ReachState
			type = ReachState
			title = Stop safely
			hideChildren = true
			maxSpeed = 0.0
			targetBody = Kerbin
			disableOnStateChange = false
			completeInSequence = true
		}
	
	}

//Recovery Parameters - Craft and Kerbal Recovery
	PARAMETER
	{
		name = All
		type = All
		title = Recover

		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			title = your craft
		}
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying it
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = and do not kill anyone in the process
			countMax = 1
		}
		
	}
	
}
