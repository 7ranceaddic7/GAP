//IslandTours-Flight-2 - KSC Island Tours: Aerial Tour: Flight 2 - Tourists: (2-6)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR	

	REQUIREMENT
	{
		name = All
		type = All
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = IslandTours-Flight-1
			minCount = 1
			
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = SSI-5000m
			minCount = 1
			
		}
		
	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = int
		
		numPassengers = Random(2,6)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		kerbals = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal() ].Random(@numPassengers)
		
	}


//CONTRACT DESCRIPTION
	name = IslandTours-Flight-1
	title = Aerial Tour: Flight 2 - Tourists: @/numPassengers
	group = KSC Island Tours
	agent = KSC Island Tours
	
	description = Your flight over the KSC Islands did not go unnoticed. In fact, your survey of the islands has proven to the public that the islands are even more beautiful when seen from the air. KSC Island Tours would like to know if you'd be interested in taking @/numPassengers tourists on an aerial tour of the islands. They request that you fly them within 500m of the waypoints so the passengers may be able to take some great photos.
	
	synopsis = Fly @/numPassengers tourists around the specified waypoints in any order and recover everyone safely at KSC runway.
	
	notes = These passengers have signed a wavier understanding the risks of flying, however we really don't want you to test the legality of the waivers.
	
	completedMessage = Aerial tour completed! The tourists loved the trip and took some great pictures. KSC Island Tours thanks you for your excellent service!

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = @/numPassengers * 1500.0
  	rewardFunds = 0.0
  	rewardReputation = 1.0
 	rewardScience = 0.0

//Contract Penalties
  	failureFunds = @/numPassengers * 2400.0
 	failureReputation = 10.0


//BEHAVIORS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbals
		
		kerbalType = Tourist
		
	}
	
	BEHAVIOUR
	{
        	name = WaypointGenerator
        	type = WaypointGenerator
			
		PQS_CITY
		{
			name = KSC Island
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 81.2534693267371, 840.767780962575, 1023.85039466106
			
		}
		
		PQS_CITY
		{
			name = Kasper's Reef
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 7258.80483010525, 8223.74201426786, -69.0769274680206
			
		}
		
		PQS_CITY
		{
			name = Max's Diving Spot
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 12380.529655228, 15362.1910773538, -42.976403590932
			
		}
	
		
		PQS_CITY
		{
			name = Valentina's Island
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 10366.627166856, 23361.2467133673, 221.869934428483
			
		}
	
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft Requirements
	PARAMETER
	{
		name = All
		type = All
		title = Your craft must have
	
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = a certified pilot
			hideChildren = true
			trait = Pilot
			minCrew = 1
			
			disableOnStateChange = false
			
		}

		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = at least @/numPassengers passenger seats for
		
			minCapacity = @/numPassengers + 1
			
			disableOnStateChange = false
			
		}
		
	}

//Passenger Manifest
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(0)		
		kerbal = @/kerbals.ElementAt(0)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 1
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(1)
		kerbal = @/kerbals.ElementAt(1)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 2
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(2)
		kerbal = @/kerbals.ElementAt(2)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 3
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(3)
		kerbal = @/kerbals.ElementAt(3)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 4
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(4)
		kerbal = @/kerbals.ElementAt(4)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 5
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(5)
		kerbal = @/kerbals.ElementAt(5)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 6
			
		}
		
	}

	
//Navigate to waypoint parameters
	PARAMETER
	{
		name = All
		type = All
		title = and fly within 500m of
		
		PARAMETER
		{
			name = VisitWaypoint0
			type = VisitWaypoint
			index = 0
			distance = 500
			title = KSC Island
			
			hideChildren = true
			disableOnStateChange = true
			
		}

		PARAMETER
		{
			name = VisitWaypoint1
			type = VisitWaypoint
			index = 1
			distance = 500
			title = Kasper's Reef
			
			hideChildren = true
			hideOnCompletion = true
			disableOnStateChange = true
			
		}

		PARAMETER
		{
			name = VisitWaypoint2
			type = VisitWaypoint
			index = 2
			distance = 500
			title = Max's Diving Spot
			
			hideChildren = true
			hideOnCompletion = true
			disableOnStateChange = true
			
		}

		PARAMETER
		{
			name = VisitWaypoint3
			type = VisitWaypoint
			index = 3
			distance = 500
			title = Valentina's Island
			
			hideChildren = true
			hideOnCompletion = true
			disableOnStateChange = true
			
		}
	
	}
	
//Recovery Parameters - Landing Zone
	PARAMETER
	{
		name = ReachState
		type = ReachState
		title = and land back at KSC runway
		hideChildren = true
		situation = LANDED
		maxSpeed = 0.0
		targetBody = Kerbin
		biome = Runway
		completeInSequence = true
		disableOnStateChange = false
		
	}

//Recovery Parameters - Craft and Kerbal Recovery		
	PARAMETER
	{
		name = All
		type = All
		title = and be recovered

		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			hidden = true

		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/kerbals
			hideChildren = true
			hidden = true

		}
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying it

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = and without killing anyone in the process
			countMax = 1
			
		}
		
	}

}
