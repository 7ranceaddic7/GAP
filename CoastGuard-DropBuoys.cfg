//CoastGuard-DropBuoys - KSC Coast Guard: Drop 2 navigation buoys by aircraft.

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = CoastGuard-Certification
		minCount = 1
		
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = IslandTours-Shoreline
		minCount = 1
		
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		
		part = sensorBarometer
		
	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE

	//List of Coast Guard Team Members
	DATA
	{
		type = List<Kerbal>
		
		kerbalsCoastGuard = [ NewKerbal( Female , "Ens. Ro Kerman" , "Scientist") ]
		
	}
	
	//Pick 2 Random Buoy Drop Zones for Use by Waypoint Generator Behavior
	DATA
	{
		type = List<int>
		
		zoneList = [ 0, 1 , 2 , 3 , 4 ].Random(2)

	}
	
	
//CONTRACT DESCRIPTION

	name = CoastGuard-DropBuoys
	title = Drop 2 navigation buoys by aircraft.
	group = KSC Coast Guard
	agent = KSC Coast Guard

	description = The waters off of KSC can be treacherous in rough weather. The KSC Coast Guard has a need to deploy a few navigation buoys to help surface vessels find their way home in a storm. The buoys will contain a barometer to provide data to KSC scientists on much needed weather information so we can better inform local surface vessels of impending storms.\n\nLt. Dan Kerman wants you to take Ens. Ro Kerman to supervise the drop and afterwards collect science data from any of the deployed buoys on the surface of the water.\n\nCapt. Flip Kerman will release designs for the KSC Coast Guard Buoys we typically use for these missions if you accept this mission. These plans are dependent on you having researched a number of technologies, none of which we've checked your organization for, however, if you find you can't use the plans, you are welcome to build your own buoys with the technology you currently have access to. Unfortunately we will not be able to provide you access to government researched technology. All buoys dropped for this mission must contain a single barometer each.\n\nTo complete the mission, you probably will also need to include a transmitter on each of your buoys to collect the required science.

	synopsis = KSC Coast Guard: Our motto is Always Ready - Kemper Keratus!

	notes = You may use an airplane, helicopter, or VTOL.
	
	completedMessage = Mission Completed! Ens. Ro Kerman was very impressed with your handling of the operation. A lot of work for sure, but worth it in the long run as it will hopefully save lives.\n\nYour reputation for completing complex missions is reaching the highest levels of the Coast Guard Command. Be sure to check in at Mission Control for any new missions.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 8000.0
	rewardFunds = 8000.0
  	rewardReputation = 10.0
 	rewardScience = 2.0
	
//Contract Penalties
  	failureFunds = 16000.0
	failureReputation = 20.0
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsCoastGuard.ElementAt(0)
		kerbalType = Crew
		
	}
	
	BEHAVIOUR
	{
		name = BuoyDropZones
		type = WaypointGenerator
		
		//Rescue Areas
		
		PQS_CITY
		{
			name = KSC Sea North
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -1847.25488069029, -20058.7598335702, -453.396403818988
			
			hidden = true
			
		}		

		PQS_CITY
		{
			name = KSC Sea Central
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 20550.8508273184, 1062.93579726917, -468.244493385362
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = KSC Sea South
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 29140.5802921804, 15569.5873430977, -1025.49583004066
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = East Islands Sea
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -13479.0987451144, 22129.2856859656, -674.933362233103
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = South Islands Sea
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 4175.6529485127, 49157.8040008561, -2146.85443912575
			
			hidden = true
			
		}
		
		//Randomize a 5000m Radius Waypoint Near Drop Zone Areas
		RANDOM_WAYPOINT_NEAR
		{
		
			name = Buoy Drop Zone 1
			icon = marker
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			maxDistance = 7500.0
			altitude = 0.0
		
		}
		
		RANDOM_WAYPOINT_NEAR
		{
		
			name = Buoy Drop Zone 2
			icon = marker
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(1)
			maxDistance = 7500.0
			altitude = 0.0
		
		}
		
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			targetBody = Kerbin
			pqsCity = IslandAirfield
			pqsOffset = -44.0509605753032, -247.057216484056, 18.0797328829649
			altitude = 24
			hidden = true
		
		}
		
	}
	
	BEHAVIOUR
	{
		name = CopyCraftFile
		type = CopyCraftFile
		
		url = ContractPacks/GAP/Assets/KSC Coast Guard Buoy.craft
		craftType = VAB
		onState = CONTRACT_ACCEPTED
		
	}
	
	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have an engineer
			
			trait = Engineer
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a scientist
			
			trait = Scientist
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least 1 passenger seat
			
			minCapacity = 4
			
			disableOnStateChange = false
			
		}

//This must be disabled in order to collect science. Normally its disabledonStateChange set to false to prevent passengers from tripping up the contract prematurely, but this contract is one exception since there are no Kerbals that can trip the science check.
		disableOnStateChange = true

	}

//Passenger Manifest - Load Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load your Coast Guard team member
		
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsCoastGuard
				
			}
			
			hideChildren = true
			
		}

	}
	
	PARAMETER
	{
		name = Any
		type = Any
		title = have 2 buoys on board
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = each having a barometer

			part = sensorBarometer
			minCount = 2

			disableOnStateChange = true
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = and a transmitter

			partModule = ModuleDataTransmitter			
			minCount = 2

			hideChildren = true
			
		}
	
	}

//Contract Goals
//Buoy Drop Zone 1
	PARAMETER
	{
		name = VisitWaypoint
		type = VisitWaypoint
		title = navigate to Buoy Drop Zone 1 (5km Zone)
		
		index = 5
		distance = 5000
		hideOnCompletion = true
		
		disableOnStateChange = true
		hideChildren = true
		
	}

	PARAMETER
	{
		name = PartValidation
		type = PartValidation
		title = drop 1st buoy
		
		part = sensorBarometer
		maxCount = 1

		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		
	}

//Buoy Drop Zone 2
	PARAMETER
	{
		name = VisitWaypoint
		type = VisitWaypoint
		title = navigate to Buoy Drop Zone 2 (5km Zone)
		
		index = 6
		distance = 5000
		hideOnCompletion = true
		
		disableOnStateChange = true
		hideChildren = true
		
	}

	PARAMETER
	{
		name = PartValidation
		type = PartValidation
		title = drop 2nd buoy
		
		NONE
		{
			part = sensorBarometer
		
		}

		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		
	}
	
//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land
		
		PARAMETER
		{
			name = Any
			type = Any
			title = at either
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Island Airfield
				
				vessel = craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = KSP-IslandPrep
					minCount = 1
					
				}

				PARAMETER
				{
					name = LandatIslandAirfield
					type = All

					PARAMETER
					{
						name = VisitWaypoint
						type = VisitWaypoint
						index = 7

						distance = 800
						hideOnCompletion = true
						
						disableOnStateChange = true
						hideChildren = true
						
					}
					
					PARAMETER
					{			            
						name = ReachState   
						type = ReachState

						situation = LANDED
						maxSpeed = 0.0
						
						disableOnStateChange = true
						hideChildren = true
						
					}

					hideChildren = true
					hidden = true
				
				}

				hideChildren = true

			}

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Spaceplane Hangar Air Terminal
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Administration Building Helipad
				
				vessel = craft

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				hideChildren = true	

			}
		
		}

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your craft
			
			vessel = craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
	
		completeInSequence = true
		disableOnStateChange = true	

	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsCoastGuard
				
			}
			
			hideChildren = true
			
		}
		
	}
	
//Collect Science	
	PARAMETER
	{
		name = CollectScience
		type = CollectScience
		title = and then transmit barometric science from one of your buoys
		
		targetBody = Kerbin
		situation = SrfSplashed
		
		experiment = barometerScan
		recoveryMethod = Transmit
		
		completeInSequence = true
		hideChildren = true
		
	}
	
}