//IslandTours-Flight-38 - KSC Island Tours: Seaplane Tour: Flight 38 - Tourists: (4-8)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = IslandTours-Flight-1
		minCount = 1

	}
	
//	REQUIREMENT
//	{
//		name = CompleteContract
//		type = CompleteContract
//		contractType = SSI-Seaplane
//		minCount = 1
//
//	}


//DATA NODES TO PROCESS FOR CONTRACT USE

//Island Staff Data
	DATA
	{
		type = List<Kerbal>
		kerbalsIslandStaff = [ NewKerbal( Male , "Nightingale Kerman" , "Engineer") ]
		
	}

//Outbound Passenger Data
	DATA
	{
		type = int
		
		numPassengers = Random(4, 8)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOutbound = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal() ].Random(@numPassengers)
		
	}
	
	//sets plural indicator, if true use element 0 in the string
	DATA
	{
		type = int
		
		plural = @numPassengers > 1 ? 1 : 0
	}
	
	DATA
	{
		type = List<String>
		
		pluralSeats = [ "seat" , "seats" ]
		
	}
	
	DATA
	{
		type = List<String>
		
		pluralPassengers = [ "passenger" , "passengers" ]
		
	}
	
//Inbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersInbound = Random(2, 4)

	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOnIsland = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal()]
		
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInbound = @kerbalsOnIsland.Random(@numPassengersInbound)
		
	}

	//sets plural indicator, if true use element 0 in the string
	DATA
	{
		type = int
		
		pluralInbound = @numPassengersInbound > 1 ? 1 : 0
	}
	
	DATA
	{
		type = List<String>
		
		pluralPassengersInbound = [ "passenger" , "passengers" ]
		
	}


//CONTRACT DESCRIPTION

	name = IslandTours-Flight-38
	title = Seaplane Tour: Flight 38 - Tourists: @/numPassengers
	group = KSC Island Tours
	agent = KSC Island Tours

	description = KSC Island Tours is impressed with your ability to wow the tourists to KSC and are asking if you'd be interested in ferrying @/numPassengers high paying tourists to the beach resort tiki huts at Nightingales's Cay which is on the southern shore of the South Island of the KSC Isles, also known as Valentina's Island. If so, @/numPassengersInbound tourists have completed their stay there already, and also would like a lift back to KSC.

	synopsis = Deliver @/numPassengers passengers to Nightingale's Cay.

	notes = You may use a seaplane (preferred), boat, helicopter, or VTOL.

	completedMessage = Nightingale is pleased to have @/numPassengers new visitors to his happenin' place. KSC Island Tours thanks you for your service!

//Contract Limits
	maxCompletions = 0
   	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true
	
	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = @/numPassengers * 2200.0
  	rewardFunds = 0.0
  	rewardReputation = 1.0
	rewardScience = 0.0

//Contract Penalties	
  	failureFunds = @/numPassengers * 3200.0
 	failureReputation = 5.0


//BEHAVIORS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnIslandStaff
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsIslandStaff.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11482.8888459748, 23195.0201781236, -671.327826027438
			alt = 20
			heading = 191
			
		}
		
	}

	BEHAVIOUR
	{
		name = SpawnOutboundPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsOutbound
		
		kerbalType = Crew
		
	}
	
	BEHAVIOUR
	{
		name = SpawnKerbalsOnIsland
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11470.0690567115, 23196.7678581456, -669.351188105356
			alt = 20
			heading = 90
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(1)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11470.0690567115, 23196.7678581456, -669.351188105356
			alt = 20
			heading = 180
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(2)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11472.0690567115, 23197.7678581456, -669.351188105356
			alt = 20
			heading = 270
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(3)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11471.0690567115, 23197.7678581456, -669.351188105356
			alt = 20
			heading = 270
			
		}
		
	}

	BEHAVIOUR
	{
		name = SpawnCayDock
		type = SpawnVessel

		VESSEL
		{
			name = Cay Dock
			craftURL = ContractPacks/GAP/Assets/Dock.craft
			flagURL = ContractPacks/GAP/Assets/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11486.1575391202, 23202.4235570873, -674.182826470496
			heading = 198

		}
		
	}

	BEHAVIOUR
	{
		name = SpawnFishNChips
		type = SpawnVessel

		VESSEL
		{
			name = FishNChips			
			craftURL = ContractPacks/GAP/Assets/TourBoat.craft
			flagURL = ContractPacks/GAP/Assets/KSCIslandTours
			vesselType = Ship
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11475.6631548663, 23212.4327015801, -673.970972905692
			heading = 0
			pitch = 270
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki1
		type = SpawnVessel

		VESSEL
		{
			name = Tiki Hut 1
			craftURL = ContractPacks/GAP/Assets/TikiHut.craft
			flagURL = ContractPacks/GAP/Assets/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11464.6071566473, 23179.2483194294, -658.541745985451
			heading = 200
			pitch = 270
			alt = 14 

		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki2
		type = SpawnVessel
	
		VESSEL
		{
			name = Tiki Hut 2
			craftURL = ContractPacks/GAP/Assets/TikiHut.craft
			flagURL = ContractPacks/GAP/Assets/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11478.2590820091, 23178.67620433, -661.335804493196
			heading = 200
			pitch = 275
			alt = 11.5
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnTiki3
		type = SpawnVessel

		VESSEL
		{
			name = Tiki Hut 3
			craftURL = ContractPacks/GAP/Assets/TikiHut.craft
			flagURL = ContractPacks/GAP/Assets/KSCIslandTours
			vesselType = Base
			owned = false
			
			pqsCity = IslandAirfield
			pqsOffset = 11459.244745864, 23193.0548879867, -662.891364874842
			heading = 200
			pitch = 270
			alt = 11
			
		}
	
	}
	
	BEHAVIOUR
	{
        	name = WaypointGenerator
        	type = WaypointGenerator
		
		PQS_CITY
		{
			name = Valentina's Island
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 10366.627166856, 23361.2467133673, 221.869934428483
			
		}
		
		PQS_CITY
		{
			name = Nightingale's Cay
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = 11483.1934275414, 23196.4335340857, -671.961082304042
			parameter = VisitWaypoint0
			
		}
	
	}

//Remove all SpawnVessels when done
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		
		vessel = Cay Dock
		vessel = FishNChips
		vessel = Tiki Hut 1
		vessel = Tiki Hut 2
		vessel = Tiki Hut 3
		
	}


//PARAMETERS FOR CONTRACT COMPLETION
//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = Any
			type = Any
			title = have a certified engineer or pilot
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				
				trait = Pilot
				minCrew = 1
				
				hideChildren = true
				disableOnStateChange = false
				
			}
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				
				trait = Engineer
				minCrew = 1
				
				disableOnStateChange = false
				hideChildren = true
				
			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numPassengers passenger @/pluralSeats.ElementAt(@/plural)
			
			minCapacity = @/numPassengers + 1
			
			disableOnStateChange = false
			
		}
		
		disableOnStateChange = false

	}

//Passenger Manifest - Load Outbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load @/pluralPassengers.ElementAt(@/plural)
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			hideChildren = true
			
		}

	}

//Contract Goals
//Navigate to Waypoints
	PARAMETER
	{
		name = VisitWaypoint0
		type = VisitWaypoint
		title = navigate to Valentina's Island
		
		index = 0
		distance = 2000		
		hideOnCompletion = true
		
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		
	}

	PARAMETER
	{
		name = VisitWaypoint1
		type = VisitWaypoint
		title = arrive at Nightingale's Cay
		
		index = 1
		distance = 50
		hideOnCompletion = true

		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		
	}

//Passenger Manifest - Unload Outbound Passengers
	PARAMETER
	{
		name = Not
		type = Not
		title = unload @/pluralPassengers.ElementAt(@/plural)
	
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}
	
//Passenger Manifest - Load Inbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load @/pluralPassengersInbound.ElementAt(@/pluralInbound)
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound.Random(@/numPassengersInbound)
				
			}
			
			hideChildren = true
			
		}

	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land back at KSC
		
		PARAMETER
		{
			name = Any
			type = Any
			title = on either

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC runway
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building helipad
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Administration Building helipad
				
				vessel = craft

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				hideChildren = true	

			}
		
		}

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your craft
			
			vessel = craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
		
	}

	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}