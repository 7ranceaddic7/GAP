//CoastGuard-RescueFishermen - KSC Coast Guard: S.O.S. Distress Call - (shipName)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = CoastGuard-Certification
		minCount = 1
		
	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE
	
	DATA
	{
		type = List<Kerbal>
		kerbals = [ NewKerbal( Male , "Lt Dan Kerman" , "Pilot"), NewKerbal(), NewKerbal() ]
		
	}	

	
//CONTRACT DESCRIPTION

	name = CoastGuard-RescueFishermen
	title = S.O.S. Distress Call - S.S. Minnow
	group = KSC Coast Guard
	agent = KSC Coast Guard

	description = An S.O.S. was reported by a fishing vessel somewhere in the waters between KSC and KSC Island. The captain reports their engine has taken on water, and they are adrift. Rescue the crew and return them to KSC for a safe recovery. Lt. Dan Kerman from the KSC Coast Guard will be on board to help with the rescue.

	synopsis = KSC Coast Guard: Our motto is Always Ready - Kemper Keratus!

	notes = Rescue all fishing vessel crew members from the waters of the ocean and bring them back to KSC for recovery and snacks.
	
	completedMessage = Mission Completed! The crew of the S.S. Minnow thank you for rescuing them from the waters off KSC. Your heroics have not gone unnoticed and your reputation has now grown a little bit more!

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 1

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 5000.0
	rewardFunds = 5000.0
  	rewardReputation = 15.0
 	rewardScience = 1.0
	
//Contract Penalties
  	failureFunds = 10000.0
	failureReputation = 20.0
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbals.ElementAt(0)
		kerbalType = Crew
		
	}

	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbals.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false

			pqsCity = KSC
			pqsOffset = 12867.0651104605, -18789.3871168656, -474.061093828
			alt = 0
			heading = 350
			
		}

		KERBAL
		{
			kerbal = @/kerbals.ElementAt(2)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			
			pqsCity = KSC
			pqsOffset = 12867.5539144455, -18790.0284529034, -474.759797401123
			alt = 0
			heading = 80
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel
		deferVesselCreation = false

		VESSEL
		{
			name = S.S. Minnow
			craftURL = ContractPacks/GAP/Assets/Speedboat.craft
			vesselType = Ship
			owned = True
			targetBody = Kerbin

			pqsCity = IslandAirfield
			pqsOffset = 15865.6687187416, 502.391554190035, -324.868682358054
			alt = -5
			heading = 133.5
			pitch = 90
			roll = 180
			
		}
		
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator
	   
		WAYPOINT       
		{
			name = S.O.S.         
			icon = marker
			
			latitude = -1.9000277169078
			longitude = 286.61659588561
			altitude = 20
			
			//PQS: IslandAirfield 15866.2010362021, 502.475233629535, -305.95269424668
			
		}
		
	}

	
//Remove all SpawnVessels when done
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		
		onState = CONTRACT_SUCCESS
		vessel = S.S. Minnow
		
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = craft
		dissassociateVesselsOnContractCompletion = true

		//PV for Pods is required for later VPG vessel recall, for command seat only aircraft. CC #400
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			
			category = Pods

			disableOnStateChange = false
			hideChildren = true
			hidden = true
			
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a Kerbal in command
			
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least 2 passenger seats
			
			minCapacity = 3
			
			disableOnStateChange = false
			
		}
		
		disableOnStateChange = false

	}


//Contract Goals
	PARAMETER
	{
		name = VisitWaypoint
		type = VisitWaypoint
		title = navigate to S.O.S Waypoint
		
		index = 0
		distance = 500
		hideOnCompletion = true
		
		disableOnStateChange = true
		hideChildren = true
		
	}

	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		title =  rescue all crewmen

		completeInSequence = true
		disableOnStateChange = false
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = land at KSC
		
		PARAMETER
		{
			name = Any
			type = Any
			title = on either

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC runway
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building helipad
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Administration Building helipad
				
				vessel = craft

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				hideChildren = true		

			}
		
		}

	}
	


//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your craft
			
			vessel = craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
		
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbals
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}