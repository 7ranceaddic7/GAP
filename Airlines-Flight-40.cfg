//Airlines-Flight-40 - KSC Airlines: Charter Flight 40 - Seats: (2-8)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = Airlines-Flight-20
		minCount = 1

	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftAirlinesFlight40
		
	}

//Outbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersOutbound = Random(2, 8)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOutbound = [ NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ) ].Random(@numPassengersOutbound)
		
	}
	
//Inbound Passenger Data
	DATA
	{
		type = int
		
		numPassengersInbound = Random(4, 4)

	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsOnIsland = [ NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ), NewKerbalWithTrait( "Scientist" ) ]
		
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInbound = @kerbalsOnIsland.Random(@numPassengersInbound)
		
	}

//Total Passenger Data	
//Total passengers for this contract
	DATA
	{
		type = int
		
		numPassengersTotal = @numPassengersOutbound + @numPassengersInbound
	}
	
//maximum number of seats required for this contract
	DATA
	{
		type = int
		
		numSeats = @numPassengersOutbound > @numPassengersInbound ? @numPassengersOutbound : @numPassengersInbound
	
	}
	
//Snacks
	DATA
	{
		type = double
		
		numSnacks = Round(@numPassengersTotal * 1.1)
		numAirSickness = Round(Random( 0 , @numSeats / 3))
		
	}
	

//CONTRACT DESCRIPTION

	name = Airlines-Flight-40
	title = Charter: Flight 40 - Seats: @/numSeats
	group = KSC Airlines Charters
	agent = KSC Airlines

	description = A science symposium is being held on KSC Island. Groups of Kerbal Space Program scientists need a lift to and from KSC Island. Fly out @/numPassengersOutbound passengers to KSC Island, and exchange them with @/numPassengersInbound passengers waiting there for a return trip to KSC.\n\nTotal Passengers: @numPassengersTotal\nOutbound Passengers: @/numPassengersOutbound | Inbound Passengers: @/numPassengersInbound

	synopsis = For science! This is a round trip flight. The pay for this charter flight is less than other charters, however your organization will receive a portion of the science gain expected from the symposium for completing the flight.

	notes = You may use an airplane, helicopter, or VTOL, but your aircraft must contain a crew cabin.

	completedMessage = Flight Completed!\n\nSnacks served: @/numSnacks\nAir sickness bags used: @/numAirSickness\n\nKSC Airlines thanks you for ferrying scientists for the Kerbal Space Program science symposium.

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 5000.0
  	rewardFunds = 5000.0
  	rewardReputation = 1.0
 	rewardScience = 10.0

//Contract Penalties
  	failureFunds = 15000.0
 	failureReputation = 25.0


//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnOutboundPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsOutbound
		
		kerbalType = Crew
		
	}
	
	BEHAVIOUR
	{
		name = SpawnKerbalsOnIsland
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(0)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -130.997359523775, -175.815974214336, 18.0997077854
			alt = 133.103743439424
			heading = 310
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(1)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -132.753837420853, -175.768306999687, 18.09969760210
			alt = 133.126783730113
			heading = 310
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(2)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -132.753837420853, -175.768306998687, 18.09969750210
			alt = 133.126783730113
			heading = 310
			
		}
		
		KERBAL
		{
			kerbal = @/kerbalsOnIsland.ElementAt(3)
			owned = false
			addToRoster = false
			
			pqsCity = IslandAirfield
			pqsOffset = -132.753837420853, -175.768306997687, 18.09969740210
			alt = 133.126783730113
			heading = 310
			
		}
		
	}

	BEHAVIOUR
	{
        	name = WaypointGenerator
        	type = WaypointGenerator
       
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = -129.870222771593, -227.36909617722, 25.4157831746222
			altitude = 100
			
		}
	
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numSeats passenger seats
			
			minCapacity = @/numSeats + 1
			
			disableOnStateChange = false
			
		}

		PARAMETER
		{
			name = Any
			type = Any
			title = have a crew cabin
		
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				
				part  = MK1CrewCabin
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true

			}
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				
				part  = mk2CrewCabin
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true

			}
			
			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				
				part  = mk3CrewCabin
				
				disableOnStateChange = false
				hideChildren = true
				hidden = true

			}
			
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		disableOnStateChange = false

	}

//Passenger Manifest - Load Outbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			hideChildren = true
			
		}

	}
	
//Contract Goals
//Navigate to waypoint requirement include landing to a complete stop
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = land at the KSC Island Airfield
		
		vessel = @/craft
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = LANDED
			maxSpeed = 0.0
			
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0

			distance = 690
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			
		}

		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true	
	
	}
	
//Passenger Manifest - Unload Outbound Passengers
	PARAMETER
	{
		name = Not
		type = Not
		title = unload passengers
	
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsOutbound
				
			}
			
			hideChildren = true
			
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}
	
//Passenger Manifest - Load Inbound Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound.Random(@/numPassengersInbound)
				
			}
			
			hideChildren = true
			
		}

	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land back at KSC
		
		PARAMETER
		{
			name = Any
			type = Any
			title = on either

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Spaceplane Hangar Air Terminal
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Administration Building Helipad
				
				vessel = @/craft

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				disableOnStateChange = false
				hideChildren = true

			}
			
		
			disableOnStateChange = false
		
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
		
	}

	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInbound
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}
