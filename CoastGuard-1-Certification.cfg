//KSC Coast Guard 1 Certification

CONTRACT_TYPE
{
//Contract Descriptions
	name = CoastGuard-1-Certification
	title = Coast Guard: Certification Mission
	group = KSC Coast Guard
	agent = KSC Coast Guard
	description = With most money going to the Kerbal Space Program, the KSC Coast Guard often finds itself short on funds for new craft and qualified personnel. We are asking your organization to partner with us to help save lives and bring home what is lost. This is a volunteer contract only, with hazard pay being available only in the most dangerous of missions. We will provide a small advance for fuel and supplies, but what you'll earn mostly by serving is the pride in knowing you are making a difference, and a good reputation for any missions you complete successfully. If you accept, our trained rescue diver and paramedic, Lt. Dan Kerman, will be assigned to help train your volunteers, and will join you on any future missions that you may accept.
	synopsis = KSC Coast Guard: Our motto is Always Ready - Kemper Keratus!
	notes = Rescue Lt. Dan from the deeper waters off the eastern shores of the Kerbal Space Center. Bring him back to land by any means possible to recover him. We recommend that whatever vessel you may choose to employ, that you have grabable rails or a ladder to assist in plucking him from the water.
	completedMessage = KSC Coast Guard Certification Mission Completed! Lt. Dan Kerman thanks you for willingness to volunteer and is impressed with your ingenuity and adaptability to complete the mission. He has now certified your orgnization ready for accepting KSC Coast Guard rescue and retrieval contracts.

//Contract Limits
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 1
	cancellable = true
	declinable = true
	autoAccept = false
	prestige = Trivial
	targetBody = Kerbin
	maxCompletions = 1
	maxSimultaneous = 1

//Contract Rewards
 	rewardScience = 1.0
  	rewardReputation = 10.0
  	rewardFunds = 0.0
 	failureReputation = 10.0
  	failureFunds = 0.0
  	advanceFunds = 2000.0
	weight = 10.0


//Requirements for Contract to Appear
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked
			part = miniJetEngine
		}

		REQUIREMENT:NEEDS[KAX]
		{
			name = PartUnlocked
			type = PartUnlocked
			part = KAXsportprop
		}
	}

	
//Parameters for Contract Completion
	PARAMETER
	{
		name = HasCrewCapacity
		type = HasCrewCapacity
		minCapacity = 2
		title = Your craft must have room for at least 1 passengers
	}

//Arrive at S.O.S. parameter
	PARAMETER
	{
		name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		hideChildren = true
		distance = 500
		hideOnCompletion = true
		disableOnStateChange = true
	}

	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title =  Rescue crewman
	}

//Recovery Parameters - Landing Zone
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = Return crewman back to land
			hideChildren = true
			situation = LANDED
			maxSpeed = 0.0
			targetBody = Kerbin
			disableOnStateChange = false
		}

//Recovery Parameters - Craft and Kerbal Recovery	
	PARAMETER
	{
		name = RecoverCraftandKerbals
		type = All
		title = Recover crewman
		hideChildren = true

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your craft
		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = and do not kill anyone in the process
			countMax = 1
		}
		
	}	


//Behaviors to do when creating contract
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			name = Lt. Dan Kerman
			gender = Male
			kerbalType = Unowned
			owned = false
			addToRoster = false
			pqsCity = KSC
			pqsOffset = 3636.74176576774, 948.452291817594, -54.6489646538366
			heading = 300
		}
		
	}
 
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		PQS_CITY
		{
			name = S.O.S. 
			icon = marker
			targetBody = Kerbin
			pqsCity = KSC
			pqsOffset = 3636.74176576774, 948.452291817594, -54.6489646538366
		
		}
		
	}
	
}
