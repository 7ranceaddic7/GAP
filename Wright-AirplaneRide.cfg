//Wright Aeronautical: Airplane Ride - Passengers: 1-2

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = Wright-FirstFlight
		minCount = 1

	}
	

//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = int
		
		numPassengers = Random(1,2)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		kerbals = [ NewKerbal(), NewKerbal() ].Random(@numPassengers)
		
	}
	
		DATA
	{
		type = List<String>
		plural = [ "seat" , "seats" ]
		
	}
	
	
//CONTRACT DESCRIPTION

	name = Wright-AirplaneRide
	title = Airplane Ride - Passengers: @/numPassengers
	group = Wright Aeronautical
	agent = Wright Aeronautical

	description = Your famous airplane flight has spurred a major interest in airplane rides. There is already a line of tourists at KSC who want to pay a good deal of funds to take a ride up in the air. This is looking like a great opportunity to make some cash on the side!

	synopsis = Load up tourists, fly around, and land safely - and make some money doing so!

	completedMessage = Airplane ride completed!

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
	weight = 5.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 0.0
  	rewardFunds = @/numPassengers * 500.0
  	rewardReputation = 1.0
 	rewardScience = 0.0

//Contract Penalties
  	failureFunds = @/numPassengers * 1000.0
 	failureReputation = 5.0
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbals
		
		kerbalType = Tourist
		
	}
	

//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your airplane must have
		
		define = aircraft
		dissassociateVesselsOnContractCompletion = true
		
		disableOnStateChange = false
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = a certified pilot
			
			trait = Pilot
			minCrew = 1
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = at least @/numPassengers passenger @/plural.ElementAt(@/numPassengers - 1)
			
			minCapacity = @/numPassengers + 1
			
			disableOnStateChange = false
			
		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = wings
			
			category = Aero
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = Not
			type = Not
			title = no
			
			PARAMETER
			{
				name = HasResourceCapacity
				type = HasResourceCapacity
				title = solid rocket fuel
				
				resource = SolidFuel
				
				hideChildren = true

			}
		
		}

	}

//Passenger Manifest
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(0)		
		kerbal = @/kerbals.ElementAt(0)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 1
			
		}
		
	}
	
	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = Tourist: @/kerbals.ElementAt(1)
		kerbal = @/kerbals.ElementAt(1)
		hideChildren = true
		
		REQUIREMENT
		{
			type = Expression
			expression = @/numPassengers >= 2
			
		}
		
	}
	
//Mission Parameters
	PARAMETER
	{
		name = All
		type = All
		title = Take them flying
		disableOnStateChange = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = in the air (and under 4 Gs)
			
			situation = FLYING
			maxAcceleration = 4.0
			
			hideChildren = true
			completeInSequence = true
			
		
		}
		
		PARAMETER
		{
			name = Duration
			type = Duration
			
			duration = 2m
			
			preWaitText = for:
			waitingText = for:
			completionText = You can land now!

			completeInSequence = true
			
		}
		
	}

//Recovery Parameters - Landing Zone	
	PARAMETER
	{
		name = All
		type = All
		title = Land your airplane safely
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = anywhere at KSC
			
			situation = LANDED
			biome = KSC
			maxSpeed = 0.0
			targetBody = Kerbin
			
			hideChildren = true
			completeInSequence = true
			disableOnStateChange = false
			
		}
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying it

		}

	}

//Recovery Parameters - Craft and Kerbal Recovery		
	PARAMETER
	{
		name = All
		type = All
		title = and recover your passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/kerbals
			hideChildren = true
			hidden = true

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without killing anyone in the process
			countMax = 1
			
		}
		
	}
	
}
