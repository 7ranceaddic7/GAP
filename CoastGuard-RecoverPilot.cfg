//CoastGuard-RecoverPilot - KSC Coast Guard: Recover downed test pilot (pilotName)!

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = CoastGuard-Certification
		minCount = 1
		
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = Wright-FirstFlight
		minCount = 1
		
	}
	
	
//DATA NODES TO PROCESS FOR CONTRACT USE

	//List of Coast Guard Team Members
	DATA
	{
		type = List<Kerbal>
		
		kerbalsCoastGuard = [ NewKerbal( Male , "Lt. Dan Kerman" , "Pilot") ] 
		
	}
	
	//List of Kerbals in Distress
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInDistress = [ NewKerbal() ]
	
	}
	
	//Random Distress Location Pulled from Waypoint Generator Behaviour
	DATA
	{
		type = double
		
		distressLat = @/DistressLocation.Waypoints().ElementAt(1).Latitude()
		distressLon = @/DistressLocation.Waypoints().ElementAt(1).Longitude()

	}
	

//CONTRACT DESCRIPTION

	name = CoastGuard-RecoverPilot
	title = Recover downed test pilot @/kerbalsInDistress.First()
	group = KSC Coast Guard
	agent = KSC Coast Guard

	description = The KSC Coast Guard has received a call from the Kerbal Space Program to pickup @/kerbalsInDistress.First() who reported a mayday and ejected from his craft during a test flight somewhere within our search and rescue area. Send out a rescue team to retrieve the test pilot and return him to an authorized Coast Guard landing area for a medical checkup and debriefing.

	synopsis = KSC Coast Guard: Our motto is Always Ready - Kemper Keratus!

	notes = Rescue and retrieve @/kerbalsInDistress.First() from somewhere within the search and rescue area. Bring them back to KSC safely.

	completedMessage = KSC Coast Guard rescue mission accomplished!\n\n@/kerbalsInDistress.First() was retrieved from the area with minimal injury. Your successful operation hasn't gone unnoticed by the Kerbal Space Program. Check in with Mission Control for your next mission.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 1

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
  	advanceFunds = 5000.0
	rewardFunds = 5000.0
  	rewardReputation = 25.0
 	rewardScience = 0.0
	
//Contract Penalties
  	failureFunds = 10000.0
	failureReputation = 50.0


//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
		
			kerbal = @/kerbalsInDistress.First()
			kerbalType = Unowned
			owned = false
			addToRoster = false

			lat = @/distressLat
			lon = @/distressLon
			heading = 300

		}
		
	}
 
	BEHAVIOUR
	{
		name = DistressLocation
		type = WaypointGenerator

		PQS_CITY
		{
			name = Search and Rescue Area Central Waypoint
			icon = marker
			
			targetBody = Kerbin
			pqsCity = KSC
			pqsOffset = 3636.74176576774, 948.452291817594, -54.6489646538366
			
			hidden = true
		
		}
		
		//Random Waypoint Within Random Rescue Area
		RANDOM_WAYPOINT_NEAR
		{
		
			name = Search Area
			icon = marker
			
			targetBody = Kerbin
			nearIndex = 0
			maxDistance = 100000.0
			altitude = 0.0
		
		}
		
	}

 	BEHAVIOUR
	{
		name = LandingZones
		type = WaypointGenerator
		
		//Island Airfield Waypoint
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			targetBody = Kerbin
			pqsCity = IslandAirfield
			pqsOffset = -44.0509605753032, -247.057216484056, 18.0797328829649
			altitude = 24
			hidden = true
		
		}
		
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your craft must
		
		define = craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a Kerbal in command
			
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least 2 passenger seats
			
			minCapacity = 3
			
			disableOnStateChange = false
			
		}
		
		disableOnStateChange = false

	}
	
//Passenger Manifest - Load Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load your Coast Guard rescue officer
		
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsCoastGuard
				
			}
			
			hideChildren = true
			
		}

	}

//Contract Goals
	PARAMETER
	{
		name = VisitWaypoint
		type = VisitWaypoint
		title = fly to the search area
		
		index = 1
		distance = 500
		hideOnCompletion = true
		
		disableOnStateChange = true
		hideChildren = true
		
	}

	PARAMETER
	{
		name = HasPassengers
		type = HasPassengers
		title = rescue test pilot
		
		completeInSequence = true
		disableOnStateChange = false
		
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land
		
		PARAMETER
		{
			name = Any
			type = Any
			title = on either
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Island Airfield
				
				vessel = craft
				
				REQUIREMENT
				{
					name = CompleteContract
					type = CompleteContract

					contractType = KSP-IslandPrep
					minCount = 1
					
				}

				PARAMETER
				{
					name = LandatIslandAirfield
					type = All

					PARAMETER
					{
						name = VisitWaypoint
						type = VisitWaypoint
						index = 2

						distance = 300
						hideOnCompletion = true
						
						completeInSequence = true
						disableOnStateChange = true
						hideChildren = true
						
					}
					
					PARAMETER
					{			            
						name = ReachState   
						type = ReachState

						situation = LANDED
						maxSpeed = 0.0
						
						completeInSequence = true
						disableOnStateChange = true
						hideChildren = true
						
					}

					completeInSequence = true
					hideChildren = true
					hidden = true
				
				}

				hideChildren = true

			}

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Spaceplane Hangar Air Terminal
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
		
		}

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your craft
			
			vessel = craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
		
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsCoastGuard
				
			}
			
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}