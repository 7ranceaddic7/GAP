//Airlines-Flight-101 - KSC Airlines: Flight 101 - Seats: (16-84)

CONTRACT_TYPE
{


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = Airlines-Flight-20
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = SSI-20000m
		minCount = 1

	}

	
//DATA NODES TO PROCESS FOR CONTRACT USE

//Passenger Data
	DATA
	{
		type = int
		
		numPassengers = Random(16, 84)
	
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbals = [ NewKerbal(), NewKerbal(), NewKerbal(), NewKerbal() ].Random(@numPassengers)
		
	}
	
//Flight Type Data
	DATA
	{
		type = List<string>
		
		flightNumList = [ "101" , "102" , "103" ]
		
	}
	
	DATA
	{
		type = int
		
		flightNumInt = @/numPassengers > 16 ? 1 : 0
		
	}
	
	DATA
	{
		type = int
		flightNumInt = @/numPassengers > 42 ? 2 : @/flightNumInt
	
	}
	
	DATA
	{
		type = string
		
		flightNum = @/flightNumList.ElementAt(@/flightNumInt)
		
	}
	

//CONTRACT DESCRIPTION

	name = Airlines-Flight-101
	title = Flight @/flightNum - Seats: @/numPassengers
	group = KSC Airlines
	agent = KSC Airlines

	description = KSC Airlines is proud to offer air transportation service to KSC Island to KSC staff and visitors. Scientists and engineers often head out to KSC Island to work on various projects, and tourists to KSC know the island as one of the best places to camp out and watch launches. Fly out @/numPassengers passengers to KSC Island, wait 30 seconds to disembark and embark passengers, and return to KSC.

	synopsis = This is a regular service round trip flight with no manual passenger exchange required. KSC Airlines regular flight service contracts are paid on a per-passenger basis.

	notes = You may only use an airplane with cabins.

	completedMessage = Flight Completed! KSC Airlines thanks you for flying the friendly skies.

//Contract Limits
   	maxCompletions = 0
   	maxSimultaneous = 1
	weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 5000.0
  	rewardFunds = @/numPassengers * 750.0
  	rewardReputation = 1.0
 	rewardScience = 1.0

//Contract Penalties
  	failureFunds = @/numPassengers * 1400.0
 	failureReputation = 40.0


//BEHAVIOURS TO DO WHEN CREATING CONTRACT

	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbals
		
		kerbalType = Tourist
		
	}

	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		PQS_CITY
		{
			name = KSC Island Airfield
			icon = marker
			
			pqsCity = IslandAirfield
			pqsOffset = -129.870222771593, -227.36909617722, 25.4157831746222
			altitude = 100
			
		}
	
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must
		
		define = craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a two certified pilots
			
			trait = Pilot
			minCrew = 2
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified engineer
			
			trait = Engineer
			minCrew = 1
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings
			
			category = Aero
			
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have at least @/numPassengers passenger seats
			
			minCapacity = @/numPassengers + 3
			
			disableOnStateChange = false
			
		}
		
		disableOnStateChange = false

	}

//Passenger Manifest - Load Passengers
	PARAMETER
	{
		name = All
		type = All
		
		title = load passengers
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbals
				
			}
			
			hideChildren = true
			
		}

	}
	
//Contract Goals
//Navigate to waypoint requirement include landing to a complete stop
	PARAMETER
	{
		name = LandatIslandAirfield
		type = All
		title = land at the KSC Island Airfield

		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0

			distance = 300
			hideOnCompletion = true
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = LANDED
			maxSpeed = 0.0
			
			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true
			
		}

		completeInSequence = true
		hideChildren = true
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land back at KSC
		
		PARAMETER
		{
			name = Any
			type = Any
			title = on either

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal
				
				vessel = craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				hideChildren = true		

			}
		
		}

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			countMax = 1

		}
		
	}

	PARAMETER
	{
		name = All
		type = All
		title = and recover
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbals
				
			}
			
			hideChildren = true
			
		}
		
	}
	
}
